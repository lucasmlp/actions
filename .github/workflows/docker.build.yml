name: Build

on:
  workflow_call:
    inputs:
      timeout-minutes:
        required: true
        type: number
      aws-region:
        required: true
        type: string
      ecr-repository:
        required: true
        type: string
    secrets:
      aws-access-key-id:
        required: true
      aws-secret-access-key:
        required: true
      ecr-registry:
        required: true


jobs:
  docker-build:
    name: 🐳 Docker Build
    runs-on: ubuntu-latest
    steps:
      - name: 🛒 Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: ⚙️ Setup GitVersion
        id: setup-gitversion
        uses: gittools/actions/gitversion/setup@main
        with:
          versionSpec: "5.x"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.aws-access-key-id }}
          aws-secret-access-key: ${{ secrets.aws-secret-access-key }}
          aws-region: ${{ inputs.aws-region }}

      - name: Login to Amazon ECR Private
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: 🏷️ Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@main

      - name: ⌚ Commit Unix Time
        id: commit-unix-time
        run: echo "COMMIT_UNIX_TIME=$(git show -s --format=%ct)" >> $GITHUB_ENV

      - name: 🐳 Docker Metadata
        id: docker-metadata
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.ecr-registry }}/${{ inputs.ecr-repository }}
          tags: |
            type=sha
            type=ref,event=branch
            type=raw,value={{branch}}-${{ env.COMMIT_UNIX_TIME }}

      - name: 🐳 Docker Build and Push
        id: docker-build-push
        uses: docker/build-push-action@v4
        with:
          push: true
          context: .
          platforms: linux/amd64
          tags: ${{ steps.docker-metadata.outputs.tags }}
          labels: ${{ steps.docker-metadata.outputs.labels }}